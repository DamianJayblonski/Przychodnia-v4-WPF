// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Przychodnia_v2;

#nullable disable

namespace Przychodnia_v4.Migrations
{
    [DbContext(typeof(PacjentContext))]
    partial class PacjentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("Przychodnia_v2.Pacjent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adres")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataUrodzenia")
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pesel")
                        .HasColumnType("TEXT");

                    b.Property<string>("Plec")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Pacjents");
                });

            modelBuilder.Entity("Przychodnia_v2.RodzajZabiegu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .HasColumnType("TEXT");

                    b.Property<string>("Numer")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("RodzajZabiegus");
                });

            modelBuilder.Entity("Przychodnia_v2.Rozpoznanie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwa")
                        .HasColumnType("TEXT");

                    b.Property<int>("PacjentID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RodzajZabieguID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("PacjentID");

                    b.HasIndex("RodzajZabieguID");

                    b.ToTable("Rozpoznanies");
                });

            modelBuilder.Entity("Przychodnia_v2.Wypis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataLeczeniaDo")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataLeczeniaOd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataWypisu")
                        .HasColumnType("TEXT");

                    b.Property<int>("PacjentID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rezultat")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("PacjentID");

                    b.ToTable("Wypiss");
                });

            modelBuilder.Entity("Przychodnia_v2.Rozpoznanie", b =>
                {
                    b.HasOne("Przychodnia_v2.Pacjent", "Pacjent")
                        .WithMany("Rozpoznanies")
                        .HasForeignKey("PacjentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Przychodnia_v2.RodzajZabiegu", "RodzajZabiegu")
                        .WithMany("Rozpoznanies")
                        .HasForeignKey("RodzajZabieguID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pacjent");

                    b.Navigation("RodzajZabiegu");
                });

            modelBuilder.Entity("Przychodnia_v2.Wypis", b =>
                {
                    b.HasOne("Przychodnia_v2.Pacjent", "Pacjent")
                        .WithMany("Wypiss")
                        .HasForeignKey("PacjentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pacjent");
                });

            modelBuilder.Entity("Przychodnia_v2.Pacjent", b =>
                {
                    b.Navigation("Rozpoznanies");

                    b.Navigation("Wypiss");
                });

            modelBuilder.Entity("Przychodnia_v2.RodzajZabiegu", b =>
                {
                    b.Navigation("Rozpoznanies");
                });
#pragma warning restore 612, 618
        }
    }
}
